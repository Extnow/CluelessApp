{"version":3,"sources":["components/ContentBox.js","components/ActionMenu.js","components/OverlayMenu.js","images/finger-print.png","App.js","index.js"],"names":["ContentBox","props","name","labels","selectedTile","setSelectedTile","grid","playerNames","clueIndex","findIndex","row","every","value","checkMarksLength","filter","includes","length","notCheckedIndex","id","className","map","i","key","item","t","style","outline","onClick","ActionMenu","checkGrid","handleTileChange","menuStyle","backgroundColor","bottom","transition","transform","disabled","OverlayMenu","handleNewGameSubmit","setIsPlaying","useState","newListOfPlayers","setNewPlayersList","amountOfPlayers","setPlayerAmount","useEffect","state","slice","concat","Array","from","type","maxLength","required","onChange","e","target","copyArray","blur","suspectNames","weaponNames","roomNames","storageGrid","suspects","JSON","parse","localStorage","getItem","weapons","rooms","App","isPlaying","setPlayerNames","suspectGrid","setSuspectGrid","weaponGrid","setWeaponGrid","roomGrid","setRoomGrid","clearBoard","listOfPlayers","setItem","stringify","trim","alert","window","confirm","src","FingerPrintImage","alt","opacity","top","left","width","height","gridType","match","rowIndex","copyArr","colIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90f9205.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ContentBox(props) {\n  const { name, labels, selectedTile, setSelectedTile, grid, playerNames } = props;\n\n  const clueIndex = grid.findIndex(row => row.every(value => value === 'X'));\n  const checkMarksLength = grid.filter(row => row.includes('✓')).length;\n  const notCheckedIndex =\n    grid.length - checkMarksLength === 1 ? grid.findIndex(row => !row.includes('✓')) : -1;\n\n  return (\n    <div id={name} className=\"select-none mb-4 md:mb-8 text-green-900 relative\">\n      <label className=\"z-40 text-3xl md:text-5xl underline capitalize\">{name}</label>\n      <div id=\"content\" className=\"mt-2 relative\">\n        {playerNames && (\n          <div className=\"absolute flex w-2/4 text-center mobile-name-labels md:name-labels\">\n            {playerNames.map((name, i) => (\n              <div key={i} className=\"z-40 w-full md:text-lg\">\n                {name}\n              </div>\n            ))}\n          </div>\n        )}\n        {labels.map((item, i) => (\n          <div key={i} id={`${name}${i + 1}`} className=\"flex h-6 md:h-12\">\n            <span\n              className={`z-40 w-2/4 inline-block align-text-top text-md md:text-3xl ${\n                clueIndex >= 0 || notCheckedIndex >= 0\n                  ? clueIndex === i || notCheckedIndex === i\n                    ? 'text-red-600'\n                    : 'line-through'\n                  : ''\n              }`}\n            >\n              {item}\n            </span>\n            <div className=\"flex w-2/4 \">\n              {grid[i].map((value, t) => (\n                <div\n                  key={t}\n                  className={`z-40 cursor-pointer select-none z-40 text-center w-full border border-green-600 text-base md:text-3xl ${\n                    selectedTile === name + i + '' + t ? 'bg-green-700 text-white' : 'bg-green-100'\n                  }`}\n                  style={{ outline: '1px solid #38a169' }}\n                  onClick={() => {\n                    if (!selectedTile) setSelectedTile(name + i + '' + t);\n                  }}\n                >\n                  {value}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ContentBox;\n","import React from 'react';\n\nfunction ActionMenu(props) {\n  const { selectedTile, checkGrid, handleTileChange, setSelectedTile } = props;\n\n  const menuStyle = {\n    backgroundColor: 'rgba(39,103,73, 0.7)',\n    bottom: '-300px',\n    transition: 'transform 0.3s ease-in-out',\n    transform: selectedTile ? 'translateY(-300px)' : ''\n  };\n\n  return (\n    <div className=\"z-50 fixed text-center w-full lg:h-48\" style={menuStyle}>\n      <div className=\"max-w-screen-sm mx-auto h-full my-3 p-2\">\n        <div className=\"flex justify-around flex-row gap-2 \">\n          <button\n            className={`rounded text-2xl text-purple-900 w-full py-1 bg-purple-200 border-2 border-purple-400 focus:bg-purple-300 focus:outline-none ${\n              !selectedTile || checkGrid() ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n            onClick={() => {\n              handleTileChange('✓');\n            }}\n            disabled={selectedTile ? checkGrid() : false}\n          >\n            ✓\n          </button>\n          <button\n            className={`rounded text-2xl text-red-900 w-full py-1 bg-red-400 border-2 border-red-600 focus:bg-red-500 focus:outline-none ${\n              !selectedTile ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n            onClick={() => handleTileChange('X')}\n          >\n            X\n          </button>\n          <button\n            className={`rounded text-2xl text-orange-900 w-full py-1 bg-orange-400 border-2 border-orange-600 focus:bg-orange-500 focus:outline-none ${\n              !selectedTile ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n            onClick={() => handleTileChange('?')}\n          >\n            ?\n          </button>\n          <button\n            className={`rounded text-2xl text-orange-900 w-full py-1 bg-orange-400 border-2 border-orange-600 focus:bg-orange-500 focus:outline-none ${\n              !selectedTile ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n            onClick={() => handleTileChange()}\n          >\n            Очистить\n          </button>\n        </div>\n        <button\n          className=\"rounded text-blue-100 text-2xl w-full mt-4 py-1 bg-blue-400 border-2 border-blue-600 focus:bg-blue-500 focus:outline-none text-white\"\n          onClick={() => setSelectedTile(null)}\n        >\n          Закрыть\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ActionMenu;\n","import React, {useState, useEffect} from 'react'\n\nfunction OverlayMenu(props) {\n    const {\n        playerNames,\n        handleNewGameSubmit,\n        setIsPlaying,\n    } = props;\n\n    const [newListOfPlayers, setNewPlayersList] = useState(playerNames);\n    const [amountOfPlayers, setPlayerAmount] = useState(playerNames.length);\n\n    useEffect(() => {\n      setNewPlayersList(state => {\n        if(state.length > amountOfPlayers) {\n          return state.slice(0, amountOfPlayers);\n        }\n        if(state.length < amountOfPlayers) return state.concat(Array.from({length: amountOfPlayers - state.length}, () => \"\"));\n\n        return state;\n      });\n    }, [amountOfPlayers]);\n\n    return(\n    <div id=\"overlay-menu\" className='z-50 w-full h-screen top-0 fixed' style={{backgroundColor: 'rgba(134,173,146, 0.7)'}}>\n        <div className=\"max-w-screen-sm mx-auto h-screen flex justify-center items-center px-2\">\n          <div className=\"w-full text-center bg-gray-400 rounded border border-black p-4\">\n            <span>New Game</span>\n            <div className=\"text-base md:text-2xl\">\n              <div>\n                <span className=\"\">How many players (including you)?</span>\n                <div className=\"flex gap-2 mt-2 justify-center\">\n                  <button \n                    className={`text-base rounded px-2 md:text-xl border-2 border-purple-400 focus:outline-none ${amountOfPlayers === 3 ? 'bg-purple-400 text-white' : ''}`}\n                    disabled={amountOfPlayers === 3}\n                    onClick={() => setPlayerAmount(3)}\n                  >Three</button>\n                  <button \n                    className={`text-base rounded px-2 md:text-xl border-2 border-purple-400 focus:outline-none ${amountOfPlayers === 4 ? 'bg-purple-400 text-white' : ''}`}\n                    disabled={amountOfPlayers === 4}\n                    onClick={() => setPlayerAmount(4)}\n                  >Four</button>\n                  <button \n                    className={`text-base rounded px-2 md:text-xl border-2 border-purple-400 focus:outline-none ${amountOfPlayers === 5 ? 'bg-purple-400 text-white' : ''}`}\n                    disabled={amountOfPlayers === 5}\n                    onClick={() => setPlayerAmount(5)}\n                  >Five</button>\n                  <button \n                    className={`text-base rounded px-2 md:text-xl border-2 border-purple-400 focus:outline-none ${amountOfPlayers === 6 ? 'bg-purple-400 text-white' : ''}`}\n                    disabled={amountOfPlayers === 6}\n                    onClick={() => setPlayerAmount(6)}\n                  >Six</button>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-3 md:grid-cols-2 gap-4 mt-4 w-full\">\n                {\n                  amountOfPlayers > 0 && Array.from({length: amountOfPlayers - 1}, () => null).map((value, i) => \n                    <div key={i} className=\"w-full mx-auto\">\n                      <div className=\"w-full border-b pb-1 border-gray-500\">Opponent #{i + 1}</div>\n                      <input\n                        type=\"text\" \n                        maxLength={6} \n                        value={newListOfPlayers[i + 1] || ''}\n                        required={true} \n                        className=\"text-center mt-1 w-full px-1 outline-none border-2 border-gray-600 focus:border-blue-400\"\n                        onChange={(e) => {\n                          if(e.target.value.length <= 6) {\n                            const copyArray = [...newListOfPlayers];\n                            copyArray[i + 1] = e.target.value;\n                            setNewPlayersList(copyArray); \n                          }\n                        }}\n                      />\n                    </div>\n                  )\n                }\n              </div>\n              <div className=\"text-xs my-4 text-gray-700 opacity-50\">*Max Characters: 6*</div>\n            </div>\n            <div className=\"flex flex-col md:flex-row mt-4 gap-2 justify-center\">\n              <button \n                className=\"bg-orange-200 text-orange-700 w-full py-1 border-2 border-orange-400 focus:outline-none focus:bg-orange-400\" \n                onClick={(e) => {setIsPlaying(true); e.target.blur();}}\n              >Cancel</button>\n              <button \n                className=\"bg-green-200 text-green-700 w-full py-1 border-2 border-green-400 focus:outline-none focus:bg-green-400\" \n                onClick={(e) => {handleNewGameSubmit(newListOfPlayers); e.target.blur();}}\n              >Confirm</button>\n            </div>\n          </div>\n        </div>\n    </div>\n    );\n}\n\nexport default OverlayMenu;","export default __webpack_public_path__ + \"static/media/finger-print.04b0b789.png\";","import React, { useState, useEffect } from 'react';\nimport ContentBox from './components/ContentBox';\nimport ActionMenu from './components/ActionMenu';\nimport OverlayMenu from './components/OverlayMenu';\n\nimport FingerPrintImage from './images/finger-print.png';\n\nconst suspectNames = [\n  'Мистер Грин',\n  'Мистер Мастард',\n  'Леди Пикок',\n  'Мистер Плам',\n  'Леди Скарлет',\n  'Леди Уайт'\n];\n\nconst weaponNames = [\n  'Гаечный ключ',\n  'Подсвечник',\n  'Кинжал',\n  'Револьвер',\n  'Свинцовая труба',\n  'Верёвка'\n];\n\nconst roomNames = [\n  'Ванная комната',\n  'Кабинет',\n  'Столовая',\n  'Бильярдная',\n  'Гараж',\n  'Спальня',\n  'Гостинная',\n  'Кухня',\n  'Внутренний двор'\n];\n\nconst storageGrid = {\n  suspects: JSON.parse(localStorage.getItem('suspectGrid')),\n  weapons: JSON.parse(localStorage.getItem('weaponGrid')),\n  rooms: JSON.parse(localStorage.getItem('roomGrid'))\n};\n\nfunction App() {\n  const [isPlaying, setIsPlaying] = useState(\n    JSON.parse(localStorage.getItem('isPlaying')) || false\n  );\n  const [playerNames, setPlayerNames] = useState(\n    JSON.parse(localStorage.getItem('playerNames')) || ['Я', 'P2', 'P3']\n  );\n  const [selectedTile, setSelectedTile] = useState(null);\n  const [suspectGrid, setSuspectGrid] = useState(\n    storageGrid.suspects ||\n      Array.from({ length: 6 }, () => Array.from({ length: playerNames.length }, () => ''))\n  );\n  const [weaponGrid, setWeaponGrid] = useState(\n    storageGrid.weapons ||\n      Array.from({ length: 6 }, () => Array.from({ length: playerNames.length }, () => ''))\n  );\n  const [roomGrid, setRoomGrid] = useState(\n    storageGrid.rooms ||\n      Array.from({ length: 9 }, () => Array.from({ length: playerNames.length }, () => ''))\n  );\n\n  const handleTileChange = (value = '') => {\n    const gridType = selectedTile.match(/[a-zA-Z]+/)[0];\n    const [rowIndex, colIndex] = selectedTile.match(/[0-9]/g);\n\n    let copyArr;\n\n    switch (gridType) {\n      case 'suspects':\n        copyArr = [...suspectGrid];\n        copyArr[rowIndex][colIndex] = value;\n        setSuspectGrid(copyArr);\n        break;\n      case 'weapons':\n        copyArr = [...weaponGrid];\n        copyArr[rowIndex][colIndex] = value;\n        setWeaponGrid(copyArr);\n        break;\n      case 'rooms':\n        copyArr = [...roomGrid];\n        copyArr[rowIndex][colIndex] = value;\n        setRoomGrid(copyArr);\n        break;\n      default:\n        break;\n    }\n\n    setSelectedTile(null);\n  };\n\n  const handleNewGameSubmit = newListOfPlayers => {\n    if (newListOfPlayers.every(name => name.trim() !== '')) {\n      setPlayerNames(newListOfPlayers);\n      clearBoard(newListOfPlayers);\n      setIsPlaying(true);\n    } else alert('Missing name(s). Please fix and submit the name(s).');\n  };\n\n  const clearBoard = (listOfPlayers = playerNames) => {\n    setSuspectGrid(\n      Array.from({ length: 6 }, () => Array.from({ length: listOfPlayers.length }, () => ''))\n    );\n    setWeaponGrid(\n      Array.from({ length: 6 }, () => Array.from({ length: listOfPlayers.length }, () => ''))\n    );\n    setRoomGrid(\n      Array.from({ length: 9 }, () => Array.from({ length: listOfPlayers.length }, () => ''))\n    );\n  };\n\n  const checkGrid = () => {\n    const gridType = selectedTile.match(/[a-zA-Z]+/)[0];\n    const [rowIndex] = selectedTile.match(/[0-9]/g);\n\n    switch (gridType) {\n      case 'suspects':\n        if (\n          suspectGrid.filter(row => row.includes('✓')).length === 5 ||\n          suspectGrid[rowIndex].includes('✓')\n        )\n          return true;\n        break;\n      case 'weapons':\n        if (\n          weaponGrid.filter(row => row.includes('✓')).length === 5 ||\n          weaponGrid[rowIndex].includes('✓')\n        )\n          return true;\n        break;\n      case 'rooms':\n        if (\n          roomGrid.filter(row => row.includes('✓')).length === 8 ||\n          roomGrid[rowIndex].includes('✓')\n        )\n          return true;\n        break;\n      default:\n        break;\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    localStorage.setItem('suspectGrid', JSON.stringify(suspectGrid));\n    localStorage.setItem('weaponGrid', JSON.stringify(weaponGrid));\n    localStorage.setItem('roomGrid', JSON.stringify(roomGrid));\n    localStorage.setItem('playerNames', JSON.stringify(playerNames));\n    localStorage.setItem('isPlaying', isPlaying);\n  }, [suspectGrid, weaponGrid, roomGrid, playerNames, isPlaying]);\n\n  return (\n    <div>\n      {!isPlaying && (\n        <OverlayMenu\n          playerNames={playerNames}\n          handleNewGameSubmit={handleNewGameSubmit}\n          setIsPlaying={setIsPlaying}\n        />\n      )}\n      <div className=\"mx-auto max-w-screen-sm w-full px-2 relative my-2\">\n        <div className=\"flex flex-col md:flex-row gap-2\">\n          <button\n            className=\"py-1 rounded text-xl text-red-900 w-full bg-red-200 border-2 border-red-400 focus:bg-red-300 focus:outline-none\"\n            onClick={e => {\n              setIsPlaying(false);\n              e.target.blur();\n            }}\n          >\n            New Game\n          </button>\n          <button\n            className=\"py-1 rounded text-xl text-orange-900 w-full bg-orange-200 border-2 border-orange-400 focus:bg-orange-300 focus:outline-none\"\n            onClick={e => {\n              if (window.confirm('Are you sure to clear the board?')) clearBoard();\n              e.target.blur();\n            }}\n          >\n            Clear Grid\n          </button>\n        </div>\n        <div\n          id=\"sheet\"\n          className=\"mt-3 border-8 border-white bg-green-200 p-4 px-6 w-full relative overflow-hidden\"\n        >\n          <img\n            className=\"z-10 absolute\"\n            src={FingerPrintImage}\n            alt=\"finger-print\"\n            style={{\n              transform: 'rotate(30deg)',\n              opacity: '8%',\n              top: '10%',\n              left: '5%'\n            }}\n            width=\"100%\"\n            height=\"100%\"\n          />\n\n          <ContentBox\n            name=\"suspects\"\n            labels={suspectNames}\n            selectedTile={selectedTile}\n            setSelectedTile={setSelectedTile}\n            grid={suspectGrid}\n            playerNames={playerNames}\n          />\n\n          <ContentBox\n            name=\"weapons\"\n            labels={weaponNames}\n            selectedTile={selectedTile}\n            setSelectedTile={setSelectedTile}\n            grid={weaponGrid}\n          />\n\n          <ContentBox\n            name=\"rooms\"\n            labels={roomNames}\n            selectedTile={selectedTile}\n            setSelectedTile={setSelectedTile}\n            grid={roomGrid}\n          />\n        </div>\n      </div>\n      <ActionMenu\n        selectedTile={selectedTile}\n        setSelectedTile={setSelectedTile}\n        checkGrid={checkGrid}\n        handleTileChange={handleTileChange}\n      />\n      <div className=\"text-center my-4\">© 2020 Brant Messenger</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}